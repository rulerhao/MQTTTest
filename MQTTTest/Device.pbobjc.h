// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: device.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
 
#import "Sensor.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class DeviceProperty;
@class GPBTimestamp;
@class MeasureRecord;
@class Sensor;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum NotifyStatusRequest_StatusCode

typedef GPB_ENUM(NotifyStatusRequest_StatusCode) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  NotifyStatusRequest_StatusCode_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 未知的狀態 */
  NotifyStatusRequest_StatusCode_UnknownStatusCode = 0,

  /** 裝置運作正常 */
  NotifyStatusRequest_StatusCode_Ok = 1,

  /** 裝置連線中 */
  NotifyStatusRequest_StatusCode_Connecting = 2,

  /** 裝置已經連線 */
  NotifyStatusRequest_StatusCode_Connected = 3,

  /** 裝置已經斷線 */
  NotifyStatusRequest_StatusCode_Disconnected = 4,

  /** 裝置故障 */
  NotifyStatusRequest_StatusCode_Fault = 99,
};

GPBEnumDescriptor *NotifyStatusRequest_StatusCode_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL NotifyStatusRequest_StatusCode_IsValidValue(int32_t value);

#pragma mark - DeviceRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface DeviceRoot : GPBRootObject
@end

#pragma mark - DeviceProperty

typedef GPB_ENUM(DeviceProperty_FieldNumber) {
  DeviceProperty_FieldNumber_Uuid = 1,
  DeviceProperty_FieldNumber_Model = 2,
  DeviceProperty_FieldNumber_Serial = 3,
};

/**
 * *
 * [[ 裝置屬性 ]]
 *
 * 此項目獨立出來，是為了 Request 端的，程式設計可以重複使用參照
 * 免得每建立一筆訊息又要建立一筆裝置的型號與序號
 **/
GPB_FINAL @interface DeviceProperty : GPBMessage

/** 裝置註冊後的代碼 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *uuid;

/** 型號 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *model;

/** 序號 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *serial;

@end

#pragma mark - NotifyStatusRequest

typedef GPB_ENUM(NotifyStatusRequest_FieldNumber) {
  NotifyStatusRequest_FieldNumber_DeviceProperty = 1,
  NotifyStatusRequest_FieldNumber_Code = 2,
};

/**
 * *
 * [[ 裝置狀態通知 ]]
 **/
GPB_FINAL @interface NotifyStatusRequest : GPBMessage

/** 裝置屬性 */
@property(nonatomic, readwrite, strong, null_resettable) DeviceProperty *deviceProperty;
/** Test to see if @c deviceProperty has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceProperty;

/** 裝置狀態 */
@property(nonatomic, readwrite) NotifyStatusRequest_StatusCode code;

@end

/**
 * Fetches the raw value of a @c NotifyStatusRequest's @c code property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t NotifyStatusRequest_Code_RawValue(NotifyStatusRequest *message);
/**
 * Sets the raw value of an @c NotifyStatusRequest's @c code property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetNotifyStatusRequest_Code_RawValue(NotifyStatusRequest *message, int32_t value);

#pragma mark - PostMeasureRequest

typedef GPB_ENUM(PostMeasureRequest_FieldNumber) {
  PostMeasureRequest_FieldNumber_RecordArray = 2,
};

/**
 * *
 * [[ 上傳量測資料 ]]
 **/
GPB_FINAL @interface PostMeasureRequest : GPBMessage

/** 多筆資料集合 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<MeasureRecord*> *recordArray;
/** The number of items in @c recordArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger recordArray_Count;

@end

#pragma mark - RepostMeasureRequest

typedef GPB_ENUM(RepostMeasureRequest_FieldNumber) {
  RepostMeasureRequest_FieldNumber_RecordArray = 2,
};

/**
 * *
 * [[ 回補裝置量測資料 ]]
 *
 * 此動作是請 Server 將資料寫入資料庫而已，不會再轉送任何封包
 **/
GPB_FINAL @interface RepostMeasureRequest : GPBMessage

/** 多筆資料集合 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<MeasureRecord*> *recordArray;
/** The number of items in @c recordArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger recordArray_Count;

@end

#pragma mark - MeasureRecord

typedef GPB_ENUM(MeasureRecord_FieldNumber) {
  MeasureRecord_FieldNumber_DeviceProperty = 1,
  MeasureRecord_FieldNumber_MeasuredAt = 2,
  MeasureRecord_FieldNumber_SensorArray = 3,
};

/**
 * *
 * [[ 量測記錄 ]]
 *
 * 每一筆量測記錄可以塞多筆感測器資料，某些裝置可能有 溫度 + 電量，則可以同時塞進去
 **/
GPB_FINAL @interface MeasureRecord : GPBMessage

/** 裝置屬性 */
@property(nonatomic, readwrite, strong, null_resettable) DeviceProperty *deviceProperty;
/** Test to see if @c deviceProperty has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceProperty;

/** 量測時間 , 建立時間時，可以用 Timestamp.fromDate(new Date()) 的方式，就不用管精確度了 */
@property(nonatomic, readwrite, strong, null_resettable) GPBTimestamp *measuredAt;
/** Test to see if @c measuredAt has been set. */
@property(nonatomic, readwrite) BOOL hasMeasuredAt;

/** 感測器資料，可以同時多筆 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Sensor*> *sensorArray;
/** The number of items in @c sensorArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger sensorArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
